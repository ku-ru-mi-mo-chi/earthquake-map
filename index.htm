<!DOCTYPE html>
<html>
<head>
  <title>全世界地震マップ（スクロール対応）</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

  <style>
    #map {
      height: 100vh;
      width: 100%;
    }
  </style>
</head>
<body>
  <div id="map"></div>

  <script>
    const tokyo = [35.6895, 139.6917];
    const map = L.map('map', {
      center: tokyo,
      zoom: 3,
      worldCopyJump: true
    });

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    const url = 'https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_day.geojson';

    function getColor(mag) {
      if (mag >= 6) return '#ff0000';
      else if (mag >= 5) return '#ff6600';
      else if (mag >= 4) return '#ffcc00';
      else return '#66ccff';
    }

    function adjustLongitude(lon) {
      const tokyoLon = 139.6917;
      let diff = lon - tokyoLon;
      if (diff > 180) lon -= 360;
      if (diff < -180) lon += 360;
      return lon;
    }

    const earthquakeLayer = L.layerGroup().addTo(map);

    function updateEarthquakes() {
      fetch(url)
        .then(response => response.json())
        .then(data => {
          earthquakeLayer.clearLayers();

          data.features.forEach(feature => {
            const coords = feature.geometry.coordinates;
            const baseLon = adjustLongitude(coords[0]);
            const lat = coords[1];
            const mag = feature.properties.mag;

            // 中心・+360度・-360度の3箇所に描画
            [-360, 0, 360].forEach(offset => {
              const lon = baseLon + offset;
              const circle = L.circleMarker([lat, lon], {
                radius: 2 + Math.pow(mag, 1.3),
                fillColor: getColor(mag),
                color: "#000",
                weight: 1,
                opacity: 1,
                fillOpacity: 0.7
              }).bindPopup(
                `<b>場所:</b> ${feature.properties.place}<br/>
                 <b>マグニチュード:</b> ${mag}<br/>
                 <b>時間:</b> ${new Date(feature.properties.time).toLocaleString()}`
              );

              earthquakeLayer.addLayer(circle);
            });
          });
        });
    }

    updateEarthquakes(); // 初回実行
    setInterval(updateEarthquakes, 60000); // 1分ごとに更新
  </script>
</body>
</html>
